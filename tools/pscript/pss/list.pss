/**
 * Copyright (C) 2017, Hao Hou
 **/

List.empty = function() 
{
	return {};
}

List.range = function(from, to) 
{
	var ret = List.empty()
	for(var i = 0; from < to; from ++)
		ret[i ++] = from;
	return ret;
}

List.append = function(list, item)
{
	var length = len(list);
	list[length] = item;
	return list;
}

List.slice = function(list, left, right)
{
	var ret = List.empty();
	for(var i = left; i < right; i ++)
		ret[i - left] = list[i];
	return ret;
}

List.map = function(func, list) 
{
	var ret = List.empty();
	var length = len(list);
	for(var i = 0; i < length; i ++)
		ret[i] = func(list[i]);
	return ret;
}

List.reduce = function(func, list)
{
	var ret = undefined;
	var length = len(list);

	if(length > 0) ret = list[0];

	for(var i = 1; i < length; i ++)
		ret = func(ret, list[i]);

	return ret;
}

List.filter = function(f, l) 
{
	var length = len(l);
	var i = 0, j = 0;
	var ret = List.empty();

	for(var i = 0, j = 0; i < length; i ++)
		if(f(l[i])) ret[j++] = l[i];
	return ret;
}

List.print = function(list)
{
	var buf = "[";
	var length = len(list);
	for(var i = 0; i < length; i ++)
	{
		if(i > 0) buf = buf + ", ";
		buf = buf + list[i];
	}
	print(buf, "]")
}

List.concat = function(left, right)
{
	var ret = List.empty();
	var ll = len(left);
	var rl = len(right);
	for(var i = 0; i < ll; i ++)
		ret[i] = left[i];
	for(var i = 0; i < rl; i ++)
		ret[i + ll] = right[i];
	return ret;
}

List.sort = function(list) 
{
	var __qsort = function(list, comp, qsort)
	{
		if(len(list) < 2) return list;
		var p = list[0];
		var left  = List.empty();
		var equal = List.empty();
		var right = List.empty();
		var length = len(list);
		for(var i = 0; i < length; i ++)
		{
			var current = list[i];
			var cmpres = comp(current, p);
			if(cmpres < 0) 
				List.append(left, current);
			else if(cmpres > 0) 
				List.append(right, current);
			else 
				List.append(equal, current);
		}
		return List.concat(List.concat(qsort(left, comp, qsort), equal), qsort(right, comp, qsort));
	}
	return function(list, comp) 
	{
		if(comp == undefined)
		{
			comp = function(x, y) 
			{
				if(x < y) return -1;
				if(x > y) return 1;
				return 0;
			}
		}
		return __qsort(list, comp, __qsort);
	}
}();

List.zip = function(a, b)
{
	var la = len(a);
	var lb = len(b);
	var l = la;
	if(la > lb) l = lb;
	var ret = List.empty();

	for(var i = 0; i < l; i++)
	{
		ret[i] = List.empty();
		ret[i][0] = a[i];
		ret[i][1] = b[i];
	}

	return ret;
}

