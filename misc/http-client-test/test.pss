#!/usr/bin/env pscript
import("service");
import("testbed");
insmod("mem_pipe");
insmod("pssm");
insmod("simulate input=" + argv[1] + " output=" + argv[2] + " label=request_data")

print(lsmod())

to_test = {
	client := "network/http/client -H -T 4";
	{
		(request) -> "request";
	} client {
		"response" -> (response);
		"__error__" -> (error);
		"__null__"  -> (null);
	};
};

in_def = {
	"request" : "plumber/std_servlet/network/http/client/v0/Request"
};

out_def = {
	"response" : "plumber/std_servlet/network/http/client/v0/Response",
	//"response" : "plumber/std/request_local/String",
	"error"    : "plumber/base/Raw",
	"null"     : "plumber/base/Raw"
};

scheduler.worker.nthreads = 4;
scheduler.async.nthreads = 1;

Service.start(Testbed.embed(to_test, in_def, out_def));
